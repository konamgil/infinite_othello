(function(i,d){typeof exports=="object"&&typeof module<"u"?d(exports):typeof define=="function"&&define.amd?define(["exports"],d):(i=typeof globalThis<"u"?globalThis:i||self,d(i.EngineCore={}))})(this,function(i){"use strict";var Ge=Object.defineProperty;var Pe=(i,d,M)=>d in i?Ge(i,d,{enumerable:!0,configurable:!0,writable:!0,value:M}):i[d]=M;var w=(i,d,M)=>Pe(i,typeof d!="symbol"?d+"":d,M);var d=typeof document<"u"?document.currentScript:null;const M=0x0101010101010101n,re=0x8080808080808080n,S=0xffffffffffffffffn,A=S^M,R=S^re;function H(s){return(s&R)<<1n}function I(s){return(s&A)>>1n}function J(s){return s<<8n}function C(s){return s>>8n}function U(s){return(s&R)<<9n}function N(s){return(s&A)<<7n}function $(s){return(s&R)>>7n}function D(s){return(s&A)>>9n}const we=[H,I,J,C,U,N,$,D];function ne(s){let e=0,t=BigInt(s);for(;t;)e++,t&=t-1n;return e}function L(s){let e=0n,t=BigInt(s);for(;t>1n;)t>>=1n,e++;return Number(e)}function q(s,e){return(7-s)*8+e}function se(s){if(s<0||s>63)throw new Error("Invalid bit index: "+s);const t=7-(s/8|0),r=s%8;return[t,r]}function Z(s,e){return 1n<<BigInt(q(s,e))}function oe(s){const e=[];let t=BigInt(s);for(;t;){const r=t&-t,n=L(r),[o,a]=se(n);e.push({row:o,col:a}),t^=r}return e}function ie(s){return s&&typeof s.length=="number"&&typeof s.subarray=="function"}function ye(s){const e=new Uint8Array(64);for(let t=0;t<8;t++)for(let r=0;r<8;r++){const n=s[t][r];e[t*8+r]=n==="black"?1:n==="white"?2:0}return e}function ve(s){let e=0n,t=0n;for(let r=0;r<64;r++){const n=s[r]|0;if(n===0)continue;const o=r/8|0,a=r%8,c=q(o,a),l=1n<<BigInt(c);n===1?e|=l:n===2&&(t|=l)}return{bp:e,wp:t}}function g(s){let e;if(ie(s)?e=s:Array.isArray(s)&&Array.isArray(s[0])?e=ye(s):Array.isArray(s)?e=Uint8Array.from(s):s&&s.cells&&ie(s.cells)?e=s.cells:e=new Uint8Array(64),e._bp===void 0||e._wp===void 0){const{bp:t,wp:r}=ve(e);e._bp=t,e._wp=r}return e}function _e(s,e,t){let r=t(s)&e;return r|=t(r)&e,r|=t(r)&e,r|=t(r)&e,r|=t(r)&e,r|=t(r)&e,t(r)}function ae(s,e){const t=g(e),r=s===1?t._bp:t._wp,n=s===1?t._wp:t._bp,o=~(r|n)&S;let a=0n;for(const c of we)a|=_e(r,n,c);return a&o}function O(s){return s==="black"?1:2}function ce(s,e){const t=O(s),r=ae(t,e);return oe(r)}function le(s,e,t){let r=0n,n,o;for(n=H(t),o=0n;n&&n&e;)o|=n,n=H(n);for(n&s&&(r|=o),n=I(t),o=0n;n&&n&e;)o|=n,n=I(n);for(n&s&&(r|=o),n=J(t),o=0n;n&&n&e;)o|=n,n=J(n);for(n&s&&(r|=o),n=C(t),o=0n;n&&n&e;)o|=n,n=C(n);for(n&s&&(r|=o),n=U(t),o=0n;n&&n&e;)o|=n,n=U(n);for(n&s&&(r|=o),n=N(t),o=0n;n&&n&e;)o|=n,n=N(n);for(n&s&&(r|=o),n=$(t),o=0n;n&&n&e;)o|=n,n=$(n);for(n&s&&(r|=o),n=D(t),o=0n;n&&n&e;)o|=n,n=D(n);return n&s&&(r|=o),r}function X(s,e,t,r){const n=O(t),o=g(r),a=Z(s,e),c=n===1?o._bp:o._wp,l=n===1?o._wp:o._bp;return(a&(c|l))!==0n?!1:le(c,l,a)!==0n}function V(s,e,t,r){const n=O(r),o=g(s),a=Z(e,t),c=n===1?o._bp:o._wp,l=n===1?o._wp:o._bp;if((a&(c|l))!==0n)return;const f=le(c,l,a);if(!f)return;const y=o._bp,u=o._wp,m=c|a|f,k=l&~f;n===1?(o._bp=m,o._wp=k):(o._wp=m,o._bp=k);let h=f|a;for(;h;){const G=h&-h,te=L(G);o[te]=n,h^=G}return{__native:!0,side:n,row:e,col:t,moveMask:a,flips:f,prevBP:y,prevWP:u}}function ue(s,e,t){const r=g(s);if(!e||!e.__native)return;r._bp=e.prevBP,r._wp=e.prevWP;let o=e.flips|e.moveMask;for(;o;){const a=o&-o,c=L(a),l=1n<<BigInt(c),f=(e.prevBP&l)!==0n,y=(e.prevWP&l)!==0n;r[c]=f?1:y?2:0,o^=a}}function he(s){const e=g(s),t=e._bp|e._wp;return ne(~t&S)}function fe(s,e){const t=O(e),r=g(s),n=0x100000001b3n,o=0x100000001b5n;let a=0xcbf29ce484222325n;return a^=r._bp*n&S,a*=o,a^=r._wp*o&S,a*=n,a^=BigInt(t&3),a*=0x100000001b7n,Number(a&0xffffffffffffffffn)}function v(s){const e=new Uint8Array(64);for(let t=0;t<8;t++)for(let r=0;r<8;r++){const n=s[t][r],o=t*8+r;n==="black"?e[o]=1:n==="white"?e[o]=2:e[o]=0}return e}function W(s){const e=[];for(let t=0;t<8;t++){const r=[];for(let n=0;n<8;n++){const o=t*8+n,a=s[o];a===1?r.push("black"):a===2?r.push("white"):r.push(null)}e.push(r)}return e}function B(s=crypto.randomUUID()){const e=Array.from({length:8},()=>new Array(8).fill(null));e[3][3]="white",e[3][4]="black",e[4][3]="black",e[4][4]="white";const t=_(e,"black");return{id:s,board:e,currentPlayer:"black",validMoves:t,score:{black:2,white:2},status:"playing",moveHistory:[],canUndo:!1,canRedo:!1}}function _(s,e){const t=g(v(s));return ce(e,t)}function j(s,e,t){const r=g(v(s));return X(e.row,e.col,t,r)}function E(s,e){if(s.status!=="playing")return{success:!1,reason:"game_finished",message:"Game is not in playing state"};if(!(s.currentPlayer==="black"||s.currentPlayer==="white"))return{success:!1,reason:"not_your_turn",message:"Invalid current player"};const t=g(v(s.board));if(!X(e.row,e.col,s.currentPlayer,t))return t[e.row*8+e.col]!==0?{success:!1,reason:"occupied",message:"Position is already occupied"}:{success:!1,reason:"no_captures",message:"Move would not capture any pieces"};if(!V(t,e.row,e.col,s.currentPlayer))return{success:!1,reason:"invalid_position",message:"Failed to apply move"};const n=W(t),o=[];for(let b=0;b<8;b++)for(let h=0;h<8;h++)s.board[b][h]!==n[b][h]&&!(b===e.row&&h===e.col)&&o.push({row:b,col:h});const a={row:e.row,col:e.col,player:s.currentPlayer,capturedCells:o,timestamp:Date.now()},c=P(n),l=s.currentPlayer==="black"?"white":"black",f=_(n,l);let y=l,u=f,m="playing";if(f.length===0){const b=_(n,s.currentPlayer);b.length===0?(m="finished",u=[]):(y=s.currentPlayer,u=b)}const k={...s,board:n,currentPlayer:y,validMoves:u,score:c,status:m,moveHistory:[...s.moveHistory,a],canUndo:!0,canRedo:!1};return{success:!0,move:a,newGameCore:k,capturedCells:o}}function P(s){let e=0,t=0;for(let r=0;r<8;r++)for(let n=0;n<8;n++){const o=s[r][n];o==="black"?e++:o==="white"&&t++}return{black:e,white:t}}function T(s){if(s.status==="finished")return!0;if(_(s.board,s.currentPlayer).length>0)return!1;const t=s.currentPlayer==="black"?"white":"black";return _(s.board,t).length===0}function z(s){if(!T(s))return null;const e=P(s.board);let t;return e.black>e.white?t="black":e.white>e.black?t="white":t="draw",{winner:t,score:e,endReason:"normal",duration:0,totalMoves:s.moveHistory.length}}function F(s){const e=g(v(s.board));return fe(e,s.currentPlayer)}function me(s){return T(s)}function x(s,e){return _(s,e).length}function K(s){const e=g(v(s));return he(e)}function de(s){return{board:g(v(s.board)),currentPlayer:s.currentPlayer,validMoves:[...s.validMoves],score:s.score}}const ke=Object.freeze(Object.defineProperty({__proto__:null,bitBoardToBoard:W,boardToBitBoard:v,calculateScore:P,createInitialGameCore:B,gameCoreForEngine:de,getEmptySquares:K,getGameResult:z,getMobility:x,getPositionHash:F,getValidMoves:_,isGameOver:T,isTerminalPosition:me,isValidMove:j,makeMove:E},Symbol.toStringTag,{value:"Module"}));class ge{constructor(e={}){w(this,"_currentGame");w(this,"_gameHistory",[]);w(this,"_redoStack",[]);w(this,"_listeners",[]);w(this,"_config");this._config={maxHistorySize:e.maxHistorySize||100,enableUndo:e.enableUndo??!0,enableRedo:e.enableRedo??!0,autoSave:e.autoSave??!1},this._currentGame=B(),this._gameHistory.push({...this._currentGame}),this.emit({type:"game_started",gameCore:this._currentGame})}get currentGame(){return this._currentGame}get currentPlayer(){return this._currentGame.currentPlayer}get validMoves(){return this._currentGame.validMoves}get score(){return this._currentGame.score}get isGameOver(){return T(this._currentGame)}get gameResult(){return z(this._currentGame)}get canUndo(){return this._config.enableUndo&&this._gameHistory.length>1}get canRedo(){return this._config.enableRedo&&this._redoStack.length>0}makeMove(e){if(this.isGameOver)return{success:!1,reason:"game_finished",message:"Game is already finished"};const t=E(this._currentGame,e);if(t.success){if(this._currentGame=t.newGameCore,this._redoStack=[],this._gameHistory.push({...this._currentGame}),this._gameHistory.length>this._config.maxHistorySize&&this._gameHistory.shift(),this.emit({type:"move_made",move:t.move,gameCore:this._currentGame}),this.isGameOver){const r=this.gameResult;r&&this.emit({type:"game_over",result:r})}else this.emit({type:"turn_changed",player:this._currentGame.currentPlayer});this._config.autoSave&&this.saveToStorage()}return t}undo(){if(!this.canUndo)return!1;this._redoStack.push({...this._currentGame}),this._gameHistory.pop();const e=this._gameHistory[this._gameHistory.length-1];return this._currentGame={...e},this.emit({type:"move_undone",gameCore:this._currentGame}),this.emit({type:"turn_changed",player:this._currentGame.currentPlayer}),!0}redo(){if(!this.canRedo)return!1;const e=this._redoStack.pop();return this._currentGame=e,this._gameHistory.push({...this._currentGame}),this.emit({type:"move_redone",gameCore:this._currentGame}),this.emit({type:"turn_changed",player:this._currentGame.currentPlayer}),!0}reset(){this._currentGame=B(),this._gameHistory=[{...this._currentGame}],this._redoStack=[],this.emit({type:"game_reset",gameCore:this._currentGame}),this.emit({type:"game_started",gameCore:this._currentGame})}isValidMove(e){return j(this._currentGame.board,e,this._currentGame.currentPlayer)}getValidMoves(){return _(this._currentGame.board,this._currentGame.currentPlayer)}setGameStatus(e){this._currentGame.status!==e&&(this._currentGame={...this._currentGame,status:e})}getPositionHash(){return F(this._currentGame)}getMoveHistory(){return this._currentGame.moveHistory}getGameStats(){return{totalMoves:this._currentGame.moveHistory.length,score:this._currentGame.score,gameId:this._currentGame.id,currentPlayer:this._currentGame.currentPlayer,status:this._currentGame.status,canUndo:this.canUndo,canRedo:this.canRedo,validMovesCount:this._currentGame.validMoves.length,historySize:this._gameHistory.length}}addEventListener(e){this._listeners.push(e)}removeEventListener(e){const t=this._listeners.indexOf(e);t!==-1&&this._listeners.splice(t,1)}removeAllEventListeners(){this._listeners=[]}emit(e){this._listeners.forEach(t=>{try{t(e)}catch(r){console.error("Error in game event listener:",r)}})}saveToStorage(e="othello-game-state"){try{const t={currentGame:this._currentGame,gameHistory:this._gameHistory,redoStack:this._redoStack,timestamp:Date.now()};localStorage.setItem(e,JSON.stringify(t))}catch(t){console.error("Failed to save game state:",t)}}loadFromStorage(e="othello-game-state"){try{const t=localStorage.getItem(e);if(!t)return!1;const r=JSON.parse(t);return this._currentGame=r.currentGame,this._gameHistory=r.gameHistory||[],this._redoStack=r.redoStack||[],this.emit({type:"game_started",gameCore:this._currentGame}),!0}catch(t){return console.error("Failed to load game state:",t),!1}}exportGame(){const e=this._currentGame.moveHistory.map((n,o)=>{const a=Math.floor(o/2)+1,c=n.player==="black"?"B":"W",l=`${String.fromCharCode(97+n.col)}${n.row+1}`;return`${a}.${c} ${l}`}),t=this.gameResult,r=t?t.winner==="draw"?"1/2-1/2":t.winner==="black"?"1-0":"0-1":"*";return[`[Game "${this._currentGame.id}"]`,'[Black "Player"]','[White "Player"]',`[Result "${r}"]`,`[Score "${this._currentGame.score.black}-${this._currentGame.score.white}"]`,"",e.join(" ")+(r!=="*"?` ${r}`:"")].join(`
`)}createSimulation(){return JSON.parse(JSON.stringify(this._currentGame))}simulateMoves(e){let t=this.createSimulation();for(const r of e){const n=E(t,r);if(n.success)t=n.newGameCore;else break}return t}getGameStateAtMove(e){return e<0||e>=this._gameHistory.length?null:{...this._gameHistory[e]}}dispose(){this.removeAllEventListeners(),this._gameHistory=[],this._redoStack=[]}}class pe{constructor(e={}){w(this,"workers",new Map);w(this,"pendingJobs",new Map);w(this,"config");w(this,"nextJobId",1);this.config={maxWorkers:e.maxWorkers||Math.max(1,Math.floor(navigator.hardwareConcurrency/2)),workerTimeout:e.workerTimeout||3e4,enableDistributedSearch:e.enableDistributedSearch??!0,fallbackToSingleWorker:e.fallbackToSingleWorker??!0},this.initializeWorkers()}initializeWorkers(){for(let e=0;e<this.config.maxWorkers;e++){const t=`worker-${e}`,r=this.spawnWorker(t);r.onmessage=n=>this.handleWorkerMessage(t,n.data),r.onerror=n=>this.handleWorkerError(t,n),this.workers.set(t,{worker:r,busy:!1,jobId:null,startTime:0})}}async search(e,t,r={}){const n=`job-${this.nextJobId++}`,o=performance.now(),a=await this.getValidMoves(e,t);return new Promise((c,l)=>{const f=setTimeout(()=>{const u=this.pendingJobs.get(n);if(u&&u.results.size>0){console.warn(`[SearchWorkerManager] Timeout reached with ${u.results.size}/${u.expectedResponses} results; resolving with best partial.`);try{const m=Array.from(u.results.values()),k=this.selectBestResult(m),b={bestMove:k.bestMove,evaluation:k.evaluation,nodes:m.reduce((h,p)=>h+p.nodes,0),depth:Math.max(...m.map(h=>h.depth)),timeUsed:performance.now()-u.startTime,workersUsed:m.length,distributionStrategy:m.length>1?"distributed":"single"};for(const h of u.workersAssigned){const p=this.workers.get(h);p&&(p.busy=!1,p.jobId=null)}this.pendingJobs.delete(n),c(b)}catch(m){this.cancelJob(n),l(new Error(`Search timeout and aggregation failed: ${m.message}`))}}else this.cancelJob(n),l(new Error(`Search timeout after ${this.config.workerTimeout}ms`))},r.timeLimit||this.config.workerTimeout);this.config.enableDistributedSearch&&a.length>=4&&this.getAvailableWorkerCount()>=2?this.startDistributedSearch(n,e,t,r,a,c,l,f,o):this.startSingleWorkerSearch(n,e,t,r,c,l,f,o)})}startSingleWorkerSearch(e,t,r,n,o,a,c,l){const f=this.getAvailableWorker();if(!f){clearTimeout(c),a(new Error("No workers available"));return}const[y,u]=f;u.busy=!0,u.jobId=e,u.startTime=performance.now(),this.pendingJobs.set(e,{id:e,resolve:o,reject:a,timeout:c,startTime:l,workersAssigned:[y],results:new Map,expectedResponses:1});const m={id:e,gameCore:t,player:r,options:n};u.worker.postMessage(m)}startDistributedSearch(e,t,r,n,o,a,c,l,f){const y=this.getAvailableWorkers(),u=Math.min(y.length,o.length);if(u===0){clearTimeout(l),c(new Error("No workers available for distributed search"));return}const m=this.distributeMoves(o,u),k=[];this.pendingJobs.set(e,{id:e,resolve:a,reject:c,timeout:l,startTime:f,workersAssigned:[],results:new Map,expectedResponses:u});for(let h=0;h<u;h++){const[p,G]=y[h],te=m[h];G.busy=!0,G.jobId=e,G.startTime=performance.now(),k.push(p);const Se={id:`${e}-${p}`,gameCore:t,player:r,options:{...n,timeLimit:n.timeLimit},rootMoves:te};G.worker.postMessage(Se)}const b=this.pendingJobs.get(e);b.workersAssigned=k}handleWorkerMessage(e,t){console.log(`[SearchWorkerManager] Received message from worker ${e}:`,t);const r=this.workers.get(e);if(!r){console.warn(`[SearchWorkerManager] No worker data found for ${e}`);return}const n=t.id.includes("-worker-")?t.id.split("-worker-")[0]:t.id,o=this.pendingJobs.get(n);if(!o){console.warn(`[SearchWorkerManager] Received result for unknown job: ${t.id}`);return}if(r.busy=!1,r.jobId=null,t.success)o.results.set(t.id,t),o.results.size>=o.expectedResponses&&this.completeJob(n);else{const a=new Error(t.error);this.failJob(n,a)}}handleWorkerError(e,t){console.error(`[SearchWorkerManager] Worker ${e} error:`,t),console.error("[SearchWorkerManager] Error details:",{message:t.message,filename:t.filename,lineno:t.lineno,colno:t.colno});const r=this.workers.get(e);r&&r.jobId&&this.pendingJobs.get(r.jobId)&&this.failJob(r.jobId,new Error(`Worker error: ${t.message}`)),this.restartWorker(e)}completeJob(e){const t=this.pendingJobs.get(e);if(t){clearTimeout(t.timeout);try{const r=Array.from(t.results.values()),n=this.selectBestResult(r),o={bestMove:n.bestMove,evaluation:n.evaluation,nodes:r.reduce((a,c)=>a+c.nodes,0),depth:Math.max(...r.map(a=>a.depth)),timeUsed:performance.now()-t.startTime,workersUsed:r.length,distributionStrategy:r.length>1?"distributed":"single"};t.resolve(o)}catch(r){t.reject(r)}finally{this.pendingJobs.delete(e)}}}failJob(e,t){const r=this.pendingJobs.get(e);if(r){clearTimeout(r.timeout);for(const n of r.workersAssigned){const o=this.workers.get(n);o&&(o.busy=!1,o.jobId=null)}r.reject(t),this.pendingJobs.delete(e)}}cancelJob(e){const t=this.pendingJobs.get(e);if(t){for(const r of t.workersAssigned){const n=this.workers.get(r);n&&(n.busy=!1,n.jobId=null)}this.pendingJobs.delete(e)}}selectBestResult(e){return e.reduce((t,r)=>r.evaluation>t.evaluation?r:t)}distributeMoves(e,t){const r=Array.from({length:t},()=>[]);return e.forEach((n,o)=>{r[o%t].push(n)}),r}async getValidMoves(e,t){const{getValidMoves:r}=await Promise.resolve().then(()=>ke);return r(e.board,t)}getAvailableWorker(){for(const[e,t]of this.workers)if(!t.busy)return[e,t];return null}getAvailableWorkers(){return Array.from(this.workers.entries()).filter(([e,t])=>!t.busy)}getAvailableWorkerCount(){return Array.from(this.workers.values()).filter(e=>!e.busy).length}restartWorker(e){const t=this.workers.get(e);t&&t.worker.terminate();const r=this.spawnWorker(e);r.onmessage=n=>this.handleWorkerMessage(e,n.data),r.onerror=n=>this.handleWorkerError(e,n),this.workers.set(e,{worker:r,busy:!1,jobId:null,startTime:0})}spawnWorker(e){const t=new URL("./search-worker.js",typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:d&&d.tagName.toUpperCase()==="SCRIPT"&&d.src||new URL("engine-core.umd.cjs",document.baseURI).href);console.log(`[SearchWorkerManager] Creating worker ${e} with URL:`,t.href);try{const r=new Worker(t,{type:"module",name:e});return console.log(`[SearchWorkerManager] Worker ${e} created successfully`),r}catch(r){throw console.error(`[SearchWorkerManager] Failed to create worker ${e}:`,r),r}}getStatus(){const e=Array.from(this.workers.values());return{totalWorkers:e.length,busyWorkers:e.filter(t=>t.busy).length,availableWorkers:e.filter(t=>!t.busy).length,pendingJobs:this.pendingJobs.size,config:this.config}}async terminate(){for(const t of this.pendingJobs.keys())this.cancelJob(t);const e=Array.from(this.workers.values()).map(t=>new Promise(r=>{t.worker.onmessage=null,t.worker.onerror=null,t.worker.terminate(),r()}));await Promise.all(e),this.workers.clear(),this.pendingJobs.clear()}}class Me{constructor(){w(this,"gameCore");w(this,"gameStateManager");w(this,"bitboard",null);this.gameCore=B(),this.gameStateManager=new ge}getValidMoves(e,t){return _(e,t)}isValidMove(e,t,r){return j(e,t,r)}simulateMove(e,t,r){try{const n=g(v(e));return V(n,t.row,t.col,r)?W(n):null}catch(n){return console.warn("SimulateMove error:",n),null}}applyMove(e,t){return E(e,t)}calculateScore(e){return P(e)}getEmptySquares(e){return K(e)}getMobility(e,t){return x(e,t)}isGameOver(e){return T(e)}getGameResult(e){return z(e)}getPositionHash(e){return F(e)}boardToBitBoard(e){return g(v(e))}bitBoardToBoard(e){return W(e)}flipPiecesBitboard(e,t,r,n){return V(e,t,r,n)}undoMoveBitboard(e,t){ue(e,t)}getStoneDifference(e,t="black"){return Y(e,t)}mapEvaluationToStoneScale(e){return ee(e)}summarizeEvaluation(e,t,r="black"){return be(e,t,r)}getGameStateManager(){return this.gameStateManager}getCurrentGameCore(){return this.gameCore}updateGameCore(e){this.gameCore=e}getOpponent(e){return e==="black"?"white":"black"}copyBoard(e){return e.map(t=>[...t])}analyzeGamePhase(e){const t=this.getEmptySquares(e);return t>50?"opening":t>20?"midgame":"endgame"}difficultyToSkill(e){return{easy:25,medium:50,hard:75,expert:90,master:100}[e]||50}skillToDifficulty(e){return e<=30?"easy":e<=60?"medium":e<=80?"hard":e<=95?"expert":"master"}initialize(){}cleanup(){}updateConfig(e){}getFallbackResponse(e){const t=this.getValidMoves(this.gameCore.board,this.gameCore.currentPlayer);return{bestMove:t.length>0?t[Math.floor(Math.random()*t.length)]:void 0,evaluation:0,depth:0,nodes:1,timeUsed:Date.now()-e}}validateRequest(e){if(!e.gameCore)throw new Error("GameCore is required");if(!e.gameCore.board)throw new Error("Board is required");if(!e.gameCore.currentPlayer)throw new Error("Current player is required")}}const Q=64;function Y(s,e="black"){const{black:t,white:r}=P(s);return e==="black"?t-r:r-t}function ee(s){if(s===void 0||Number.isNaN(s))return 0;const e=Math.tanh(s/120),t=Math.round(e*Q);return Math.max(-Q,Math.min(Q,t))}function be(s,e,t="black"){return{perspective:t,stoneDiff:Y(s,t),normalizedEval:ee(e)}}i.ALL_ONES=S,i.EngineBase=Me,i.FILE_A=M,i.FILE_H=re,i.GameStateManager=ge,i.NOT_FILE_A=A,i.NOT_FILE_H=R,i.SearchWorkerManager=pe,i.bitBoardToBoard=W,i.bitCount=ne,i.bitIndex=L,i.bitIndexToRC=se,i.boardToBitBoard=v,i.calculateScore=P,i.computeZobristHash=fe,i.createInitialGameCore=B,i.emptiesCount=he,i.ensureBoard=g,i.flipPieces=V,i.gameCoreForEngine=de,i.getEmptySquares=K,i.getGameResult=z,i.getMobility=x,i.getPositionHash=F,i.getStoneDifference=Y,i.getValidMoves=_,i.getValidMovesBitboard=ce,i.getValidMovesMask=ae,i.isGameOver=T,i.isTerminalPosition=me,i.isValidMove=j,i.isValidMoveBitboard=X,i.makeMove=E,i.mapEvaluationToStoneScale=ee,i.maskToRCList=oe,i.rcToBitIndex=q,i.rcToMask=Z,i.shiftEast=H,i.shiftNorth=J,i.shiftNorthEast=U,i.shiftNorthWest=N,i.shiftSouth=C,i.shiftSouthEast=$,i.shiftSouthWest=D,i.shiftWest=I,i.summarizeEvaluation=be,i.undoMove=ue,Object.defineProperty(i,Symbol.toStringTag,{value:"Module"})});
